Module Demo
{
    Entity Person { ShortString Name; }

    SqlProcedure ComputePersonInfo
        "@NamePattern NVARCHAR(256), @LimitResultCount INT"
        "
            SELECT TOP (@LimitResultCount)
                p.ID, p.Name, NameLength = LEN(p.Name), PersonID = p.ID
            FROM
                Demo.Person p
            WHERE
                p.Name LIKE '%' + @NamePattern + '%'
            ORDER BY
                p.Name
        ";

    Parameter PersonFilter
    {
        ShortString NamePattern;
        Integer LimitResultCount;
    }

    Computed PersonInfo 'repository => { throw new Rhetos.UserException("Use filter \"Demo.PersonFilter\" to read the data."); }'
    {
        ShortString Name;
        Integer NameLength;
        Guid PersonID;

        FilterBy PersonFilter
            '(repository, parameter) =>
            {
                // Always separate parameters to prevent SQL injection.
                string sql = "EXEC Demo.ComputePersonInfo @p0, @p1";
                var sqlParams = new object[] { parameter.NamePattern, parameter.LimitResultCount };

                var result = _executionContext.EntityFrameworkContext.Database
                    .SqlQuery<Demo.PersonInfo>(sql, sqlParams)
                    .ToArray();
                return result;
            }';
    }
}